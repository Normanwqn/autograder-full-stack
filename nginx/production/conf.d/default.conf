# Redirect http requests to https
server {
    listen 80;
    client_max_body_size 30M;
    # UPDATE ME
    server_name autograder.io;
    return 301 https://autograder.io$request_uri;
}

# Handle https requests
server {
    server_name autograder.io;

    client_max_body_size 30M;
    # Disable buffering so large file downloads don't get cut off
    proxy_max_temp_file_size 0;

    listen 443; ## listen for ipv4; this line is default and implied
    #listen [::]:80 default ipv6only=on; ## listen for ipv6

    add_header Strict-Transport-Security "max-age=17280000";
    ssl on;
    # *** Update path ***
    ssl_certificate /etc/ssl/certs/autograder.io.cert;
    # *** Update path ***
    ssl_certificate_key /etc/ssl/private/autograder.io.key.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # This should be the absolute path to media_root. Used for
    # X-Accel redirects.
    location /protected {
        internal;
        root /;
    }

    location = /api/docs {
        # Redirect to /api/docs/
        rewrite /api/docs /api/docs/ redirect;
    }

    location /api/docs/ {
        # The trailing / is needed so that we only pass the path after
        # /api/docs to the swagger server.
        proxy_pass http://apidocs:8080/;
    }

    location /api {
        add_header Cache-Control "no-cache, no-store";

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_pass http://django:8000;
    }

    location /static/ {
        alias /www/static/;
    }

    location / {
        proxy_pass http://website;
        add_header Cache-Control "no-cache, no-store";
    }
}
