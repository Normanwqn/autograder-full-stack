version: '2'

services:
  nginx:
    restart: unless-stopped
    build: ./nginx/production
    container_name: ag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ag-web-typescript/dist:/www/static
      - /etc/letsencrypt:/etc/letsencrypt:ro

  django:
    restart: unless-stopped
    build: ./autograder-server
    container_name: ag-django
    expose:
      - "8001"
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/uwsgi --ini /usr/src/app/uwsgi/uwsgi.ini
    environment:
      DJANGO_SETTINGS_MODULE: 'autograder.settings.production'
      MEDIA_ROOT: /usr/src/app/media_root
      ALLOWED_HOSTS: '' # UPDATE THIS

      # Remember to add this file (download from google dev console) and update path here.
      # The file should be put somewhere inside the autograder-server directory,
      # preferrably in autograder-server/autograder/settings
      OAUTH2_SECRETS_FILENAME: '' # UPDATE THIS

      AG_DB_NAME: 'postgres'
      AG_DB_USER: 'postgres'
      AG_DB_PASSWORD: 'jmkdj48fufuvjrk4kl4ldeoc0fktnrndhsuswkil3ldpdff0rfirjkrmjfi' # UPDATE THIS
      AG_DB_HOST: 'postgres'
      AG_DB_PORT: '5432'

      AG_REDIS_HOST: 'redis'
      AG_REDIS_PORT: '6379'

      AG_CELERY_BROKER_URL: 'amqp://guest@rabbitmq:5672//'
      AG_CELERY_RESULTS_BACKEND_URL: 'redis://redis:6379/0'

## Comment this out if you're using a separate database server
  postgres:
    restart: unless-stopped
    image: postgres:latest
    container_name: ag-postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'jmkdj48fufuvjrk4kl4ldeoc0fktnrndhsuswkil3ldpdff0rfirjkrmjfi' # UPDATE THIS

  # http://redis.io/topics/security
  redis:
    restart: unless-stopped
    image: redis:latest
    container_name: ag-redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redisdata:/data

  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:latest
    container_name: ag-rabbitmq
    hostname: rabbit
    ports:
      - "127.0.0.1:5672:5672"

  celerybeat:
    extends:
      service: django
    command: /usr/local/bin/celery worker --beat -c 1 -A autograder -l info -Q background_tasks -n background_tasks@%h
    container_name: ag-celerybeat

volumes:
  redisdata: {}
  pgdata: {}
