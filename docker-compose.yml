version: '3'

services:
  nginx:
    container_name: ag-nginx
    image: 127.0.0.1:5000/nginx
    build: ./nginx/production
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ag-web-typescript/dist:/www/typescript
      - /etc/ssl:/etc/ssl
      - ./nginx/production/conf.d:/etc/nginx/conf.d

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  django:
    container_name: ag-django
    image: 127.0.0.1:5000/django
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-prod
    expose:
      - "8001"
    volumes:
      - ./autograder-server/media_root:/usr/src/app/media_root
    command: /usr/local/bin/uwsgi --ini /usr/src/app/uwsgi/uwsgi.ini
    env_file:
      - ./autograder-server/_prod.env

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  postgres:
    container_name: ag-postgres
    image: 127.0.0.1:5000/postgres
    restart: unless-stopped
    image: postgres:9.5
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'postgres' # UPDATE THIS

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  redis:
    container_name: ag-redis
    image: 127.0.0.1:5000/redis
    restart: unless-stopped
    image: redis:latest
    expose:
      - "6379"
    volumes:
      - redisdata:/data

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  rabbitmq:
    container_name: ag-rabbitmq
    image: 127.0.0.1:5000/rabbitmq
    restart: unless-stopped
    image: rabbitmq:latest
    hostname: rabbit
    expose:
      - "5672"

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  celery_small_tasks:
    container_name: ag-celery-small-tasks
    image: 127.0.0.1:5000/celery_small_tasks
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-prod
    volumes:
      - ./autograder-server/media_root:/usr/src/app/media_root
    command: /usr/local/bin/celery worker -c 4 -A autograder -l info -Q small_tasks -n small_tasks@%h
    env_file:
      - ./autograder-server/_prod.env

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  celery_project_downloads:
    container_name: ag-celery-project-downloads
    image: 127.0.0.1:5000/celery_project_downloads
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-prod
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker -c 2 -A autograder -l info -Q project_downloads -n project_downloads@%h
    env_file:
      - ./autograder-server/_prod.env

  celerybeat:
    container_name: ag-celerybeat
    image: 127.0.0.1:5000/celerybeat
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-prod
    volumes:
      - ./autograder-server/media_root:/usr/src/app/media_root
    command: /usr/local/bin/celery worker --beat -c 1 -A autograder -l info -Q periodic_tasks -n periodic_tasks@%h
    env_file:
      - ./autograder-server/_prod.env

    # environment:
        # AG_SUBMISSION_LISTENER_INTERVAL:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class2

  grader:
    container_name: ag-grader
    image: 127.0.0.1:5000/grader
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-grader-prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./autograder-server/media_root:/usr/src/app/media_root
    env_file:
      - ./autograder-server/_prod.env

    command: /usr/local/bin/celery -A autograder worker -n submission_grader@%h --loglevel=info -c 4

    deploy:
      mode: global
      placement:
        constraints:
          - node.hostname != class2
          - node.hostname != class1

  deferred_grader:
    container_name: ag-deferred-grader
    image: 127.0.0.1:5000/deferred_grader
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-grader-prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./autograder-server/media_root:/usr/src/app/media_root
    env_file:
      - ./autograder-server/_prod.env

    command: /usr/local/bin/celery -A autograder worker -Q deferred -n deferred@%h --loglevel=info -c 1

    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == class1

networks:
  default:
    external:
      name: ag-swarm-network

volumes:
  redisdata: {}
  pgdata: {}
