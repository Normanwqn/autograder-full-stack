version: '2'

services:
  nginx:
    restart: always
    build: ./nginx/development
    container_name: ag-dev-nginx
    ports:
      - "80:80"
    volumes:
      - ./ag-web-typescript:/www/static

  django:
    extends:
      file: docker-compose.yml
      service: django
    container_name: ag-dev-django
    expose:
      - "8001"
    command: /usr/local/bin/uwsgi --ini /usr/src/app/uwsgi/uwsgi.ini --python-autoreload 1
    environment:
      DJANGO_SETTINGS_MODULE: 'autograder.settings.development'
      ALLOWED_HOSTS: '*'
      OAUTH2_SECRETS_FILENAME: 'dev_oauth2_secrets.json'
      # Set to 'false' to disable real authentication. Any other string value
      # will enable real authentication
      USE_REAL_AUTH: 'true'
      AG_DB_PASSWORD: 'postgres'

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    container_name: ag-dev-postgres
    environment:
      POSTGRES_PASSWORD: 'postgres'

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    container_name: ag-dev-redis

  rabbitmq:
    extends:
      file: docker-compose.yml
      service: rabbitmq
    container_name: ag-dev-rabbitmq

  celerybeat:
    extends:
      file: docker-compose.yml
      service: celerybeat
    container_name: ag-dev-celerybeat

    environment:
      AG_DEFERRED_CHECKER_INTERVAL: '5'
      AG_DB_PASSWORD: 'postgres'
      OAUTH2_SECRETS_FILENAME: 'dev_oauth2_secrets.json'


volumes:
  redisdata: {}
  pgdata: {}
