version: '3'

# VERSION: 3.0.0.beta2

services:
  website:
    restart: unless-stopped
    build:
      context: ./autograder-website
      dockerfile: Dockerfile-website-dev
    container_name: ag-dev-website
    ports:
      - "4200:4200"
    volumes:
      - ./autograder-website/src:/usr/src/app/src
    command: ./node_modules/.bin/ng serve --aot=true --port 4200 --host website

  django:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-django
    expose:
      - "8001"
    volumes:
      - ./autograder-server:/usr/src/app
    command: python3 /usr/src/app/manage.py runserver django:8001
    env_file:
      - ./autograder-server/_dev.env
    environment:
      # Set to false to disable real authentication. Any other string value
      # will enable real authentication.
      # Then, using a browser plugin such as EditThisCookie, set the
      # cookie "username=<email>" to set which user you want to
      # authenticate as.
      USE_REAL_AUTH: 'false'

  postgres:
    restart: unless-stopped
    image: postgres:latest
    container_name: ag-dev-postgres
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'postgres'

  redis:
    restart: unless-stopped
    image: redis:latest
    container_name: ag-dev-redis
    expose:
      - "6379"
    volumes:
      - redisdata:/data

  rabbitmq:
    image: 127.0.0.1:5000/rabbitmq
    restart: unless-stopped
    image: rabbitmq:latest
    container_name: ag-dev-rabbitmq
    hostname: rabbit
    expose:
      - "5672"

  celery_small_tasks:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-celery-small-tasks
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker -c 1 -A autograder -l info -Q small_tasks -n small_tasks@%h
    env_file:
      - ./autograder-server/_dev.env

  celery_project_downloads:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-celery-project-downloads
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker -c 1 -A autograder -l info -Q project_downloads -n project_downloads@%h
    env_file:
      - ./autograder-server/_dev.env

  celerybeat:
    container_name: ag-dev-celerybeat
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    env_file:
      - ./autograder-server/_dev.env
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker --beat -c 1 -A autograder -l info -Q periodic_tasks -n periodic_tasks@%h

   # environment:
   #  AG_SUBMISSION_LISTENER_INTERVAL: 5

  grader:
    container_name: ag-dev-grader
    build:
      dockerfile: Dockerfile-grader-dev
      context: ./autograder-server

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./autograder-server:/usr/src/app

    env_file:
      - ./autograder-server/_dev.env

    command: /usr/local/bin/celery -A autograder worker -n submission_grader@%h --loglevel=info -c 1

  deferred_grader:
    container_name: ag-dev-deferred-grader
    build:
      dockerfile: Dockerfile-grader-dev
      context: ./autograder-server

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./autograder-server:/usr/src/app
    env_file:
      - ./autograder-server/_dev.env

    command: /usr/local/bin/celery -A autograder worker -Q deferred,rerun -n deferred@%h --loglevel=info -c 1

volumes:
  redisdata: {}
  pgdata: {}
