version: '3.7'

x-grader:
  &base-grader

  restart: unless-stopped
  build:
    dockerfile: Dockerfile-grader-dev
    context: ./autograder-server

  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./autograder-server:/usr/src/app

  env_file:
    - ./autograder-server/_dev.env

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: ag-dev-nginx
    ports:
      - "4200:80"
    volumes:
      - ./nginx/development/conf.d:/etc/nginx/conf.d

  website:
    restart: unless-stopped
    build:
      context: ./ag-website-vue
      dockerfile: Dockerfile-website-dev
    container_name: ag-dev-website
    expose:
      - "8080"
    volumes:
      - ./ag-website-vue/src:/usr/src/app/src
      - ./ag-website-vue/tests:/usr/src/app/tests
      - ./ag-website-vue/public:/usr/src/app/public
    command: npm run serve -- --host website

  django:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-django
    expose:
      - "8001"
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/uwsgi --py-autoreload 1 --ini /usr/src/app/uwsgi/uwsgi.ini
    env_file:
      - ./autograder-server/_dev.env
    environment:
      # Set to false to disable real authentication. Any other string value
      # will enable real authentication.
      # Then, using a browser plugin such as EditThisCookie, set the
      # cookie "username=<email>" to set which user you want to
      # authenticate as.
      USE_REAL_AUTH: 'false'

  postgres:
    restart: unless-stopped
    image: postgres:9.5
    container_name: ag-dev-postgres
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'postgres'

  redis:
    restart: unless-stopped
    image: redis:latest
    container_name: ag-dev-redis
    expose:
      - "6379"
    volumes:
      - redisdata:/data

  rabbitmq:
    image: 127.0.0.1:5000/rabbitmq
    restart: unless-stopped
    image: rabbitmq:latest
    container_name: ag-dev-rabbitmq
    hostname: rabbit
    expose:
      - "5672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

  celery_small_tasks:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-celery-small-tasks
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker -c 1 -A autograder -l info -Q small_tasks -n small_tasks@%h
    env_file:
      - ./autograder-server/_dev.env

  celery_project_downloads:
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-dev-celery-project-downloads
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker -c 1 -A autograder -l info -Q project_downloads -n project_downloads@%h
    env_file:
      - ./autograder-server/_dev.env

  celerybeat:
    container_name: ag-dev-celerybeat
    restart: unless-stopped
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    env_file:
      - ./autograder-server/_dev.env
    volumes:
      - ./autograder-server:/usr/src/app
    command: /usr/local/bin/celery worker --beat -c 1 -A autograder -l info -Q periodic_tasks -n periodic_tasks@%h

   # environment:
   #  AG_SUBMISSION_LISTENER_INTERVAL: 5

  grader:
    <<: *base-grader
    container_name: ag-dev-grader

    command: /usr/local/bin/celery -A autograder worker -n submission_grader@%h --loglevel=info -c 1

  fast_grader:
    <<: *base-grader
    container_name: ag-dev-fast-grader

    command: /usr/local/bin/celery -A autograder worker -n fast_submission_grader@%h --loglevel=info -c 1

  deferred_grader:
    <<: *base-grader
    container_name: ag-dev-deferred-grader

    command: /usr/local/bin/celery -A autograder worker -n deferred@%h --loglevel=info -c 1

  rerun_grader:
    <<: *base-grader
    container_name: ag-dev-rerun-grader

    command: /usr/local/bin/celery -A autograder worker -n rerun@%h --loglevel=info -c 1

  image_builder:
    <<: *base-grader
    container_name: ag-dev-image-builder

    command: /usr/local/bin/celery -A autograder worker -Q build_sandbox_image -n image_builder@%h --loglevel=info -c 1

  sandbox_image_registry:
    image: registry:2
    container_name: ag-dev-sandbox-image-registry
    restart: unless-stopped

    ports:
      - 5001:5000

    volumes:
      - sandbox_image_registry_data:/var/lib/registry

volumes:
  redisdata: {}
  pgdata: {}
  rabbitmqdata: {}
  sandbox_image_registry_data: {}
